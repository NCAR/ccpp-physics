[ccpp-arg-table]
  name = sfc_diff_run
  type = scheme
[im]
  standard_name = horizontal_loop_extent
  long_name = horizontal loop extent
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[rvrdm1]
  standard_name = ratio_of_vapor_to_dry_air_gas_constants_minus_one
  long_name = (rv/rd) - 1 (rv = ideal gas constant for water vapor)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
  optional = F
[eps]
  standard_name = ratio_of_dry_air_to_water_vapor_gas_constants
  long_name = rd/rv
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
  optional = F
[epsm1]
  standard_name = ratio_of_dry_air_to_water_vapor_gas_constants_minus_one
  long_name = (rd/rv) - 1
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
  optional = F
[grav]
  standard_name = gravitational_acceleration
  long_name = gravitational acceleration
  units = m s-2
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
  optional = F
[ps]
  standard_name = surface_air_pressure
  long_name = surface pressure
  units = Pa
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[u1]
  standard_name = x_wind_at_lowest_model_level
  long_name = 1st model layer u wind speed
  units = m s-1
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[v1]
  standard_name = y_wind_at_lowest_model_level
  long_name = 1st model layer v wind speed
  units = m s-1
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[t1]
  standard_name = air_temperature_at_lowest_model_layer
  long_name = 1st model layer air temperature
  units = K
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[q1]
  standard_name = water_vapor_specific_humidity_at_lowest_model_layer
  long_name = 1st model layer specific humidity
  units = kg kg-1
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[z1]
  standard_name = height_above_ground_at_lowest_model_layer
  long_name = height above ground at 1st model layer
  units = m
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[wind]
  standard_name = wind_speed_at_lowest_model_layer
  long_name = wind speed at lowest model level
  units = m s-1
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = out
  optional = F
[prsl1]
  standard_name = air_pressure_at_lowest_model_layer
  long_name = Model layer 1 mean pressure
  units = Pa
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[prslki]
  standard_name = ratio_of_exner_function_between_midlayer_and_interface_at_lowest_model_layer
  long_name = Exner function ratio bt midlayer and interface at 1st layer
  units = ratio
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[prsik1]
  standard_name = dimensionless_exner_function_at_lowest_model_interface
  long_name = dimensionless Exner function at the ground surface
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[prslk1]
  standard_name = dimensionless_exner_function_at_lowest_model_layer
  long_name = dimensionless Exner function at the lowest model layer
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[sigmaf]
  standard_name = bounded_vegetation_area_fraction
  long_name = areal fractional cover of green vegetation bounded on the bottom
  units = frac
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[vegtype]
  standard_name = vegetation_type_classification
  long_name = vegetation type at each grid cell
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = in
  optional = F
[shdmax]
  standard_name = maximum_vegetation_area_fraction
  long_name = max fractnl cover of green veg
  units = frac
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[ivegsrc]
  standard_name = vegetation_type_dataset_choice
  long_name = land use dataset choice
  units = index
  dimensions = ()
  type = integer
  intent = in
  optional = F
[z0pert]
  standard_name = perturbation_of_momentum_roughness_length
  long_name = perturbation of momentum roughness length
  units = frac
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[ztpert]
  standard_name = perturbation_of_heat_to_momentum_roughness_length_ratio
  long_name = perturbation of heat to momentum roughness length ratio
  units = frac
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[flag_iter]
  standard_name = flag_for_iteration
  long_name = flag for iteration
  units = flag
  dimensions = (horizontal_dimension)
  type = logical
  intent = in
  optional = F
[redrag]
  standard_name = flag_for_reduced_drag_coefficient_over_sea
  long_name = flag for reduced drag coefficient over sea
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[u10m]
  standard_name = x_wind_at_10m
  long_name = 10 meter u wind speed
  units = m s-1
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[v10m]
  standard_name = y_wind_at_10m
  long_name = 10 meter v wind speed
  units = m s-1
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[sfc_z0_type]
  standard_name = flag_for_surface_roughness_option_over_ocean
  long_name = surface roughness options over ocean
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[wet]
  standard_name = flag_nonzero_wet_surface_fraction
  long_name = flag indicating presence of some ocean or lake surface area fraction
  units = flag
  dimensions = (horizontal_dimension)
  type = logical
  intent = in
  optional = F
[dry]
  standard_name = flag_nonzero_land_surface_fraction
  long_name = flag indicating presence of some land surface area fraction
  units = flag
  dimensions = (horizontal_dimension)
  type = logical
  intent = in
  optional = F
[icy]
  standard_name = flag_nonzero_sea_ice_surface_fraction
  long_name = flag indicating presence of some sea ice surface area fraction
  units = flag
  dimensions = (horizontal_dimension)
  type = logical
  intent = in
  optional = F
[tskin]
  standard_name = surface_skin_temperature_interstitial
  long_name = surface skin temperature over 1-land 2-ice 3-ocean (temporary use as interstitial)
  units = K
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[tsurf]
  standard_name = surface_skin_temperature_after_iteration
  long_name = surface skin temperature after iteration over 1-land 2-ice 3-ocean
  units = K
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[snwdph]
  standard_name = surface_snow_thickness_water_equivalent
  long_name = water equivalent snow depth 1-land 2-ice 3-ocean
  units = mm
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[z0rl]
  standard_name = surface_roughness_length_interstitial
  long_name = surface roughness length over 1-land 2-ice 3-ocean (temporary use as interstitial)
  units = cm
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[ustar]
  standard_name = surface_friction_velocity
  long_name = surface friction velocity over 1-land 2-ice 3-ocean
  units = m s-1
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[cm]
  standard_name = surface_drag_coefficient_for_momentum_in_air
  long_name = surface exchange coeff for momentum over 1-land 2-ice 3-ocean
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[ch]
  standard_name = surface_drag_coefficient_for_heat_and_moisture_in_air
  long_name = surface exchange coeff heat & moisture over 1-land 2-ice 3-ocean
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[rb]
  standard_name = bulk_richardson_number_at_lowest_model_level
  long_name = bulk Richardson number at the surface over 1-land 2-ice 3-ocean
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[stress]
  standard_name = surface_wind_stress
  long_name = surface wind stress over 1-land 2-ice 3-ocean
  units = m2 s-2
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[fm]
  standard_name = Monin_Obukhov_similarity_function_for_momentum
  long_name = Monin-Obukhov similarity function for momentum over 1-land 2-ice 3-ocean
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[fh]
  standard_name = Monin_Obukhov_similarity_function_for_heat
  long_name = Monin-Obukhov similarity function for heat over 1-land 2-ice 3-ocean
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[fm10]
  standard_name = Monin_Obukhov_similarity_function_for_momentum_at_10m
  long_name = Monin-Obukhov similarity parameter for momentum at 10m over 1-land 2-ice 3-ocean
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[fh2]
  standard_name = Monin_Obukhov_similarity_function_for_heat_at_2m
  long_name = Monin-Obukhov similarity parameter for heat at 2m over 1-land 2-ice 3-ocean
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F
