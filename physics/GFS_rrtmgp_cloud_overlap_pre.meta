[ccpp-table-properties]
  name = GFS_rrtmgp_cloud_overlap_pre
  type = scheme
  dependencies = rrtmgp_aux.F90, radiation_cloud_overlap.F90

########################################################################
[ccpp-arg-table]
  name = GFS_rrtmgp_cloud_overlap_pre_run
  type = scheme
[nCol]
  standard_name = horizontal_loop_extent
  long_name = horizontal dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[nLev]
  standard_name = vertical_dimension
  long_name = number of vertical levels
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F   
[doSWrad]
  standard_name = flag_to_calc_sw
  long_name = logical flags for sw radiation calls
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[doLWrad]
  standard_name = flag_to_calc_lw
  long_name = logical flags for lw radiation calls
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F    
[yearlen]
  standard_name = number_of_days_in_year
  long_name = number of days in a year
  units = days
  dimensions = ()
  type = integer
  intent = in
  optional = F  
[julian]
  standard_name = julian_day
  long_name = julian day
  units = days
  dimensions = ()
  type = real
  kind = kind_phys  
  intent = in
  optional = F   
[lat]
  standard_name = latitude
  long_name = latitude
  units = radian
  dimensions = (horizontal_loop_extent)
  type = real
  intent = in
  kind = kind_phys 
  optional = F     
[p_lev]
  standard_name = air_pressure_at_interface_for_RRTMGP_in_hPa
  long_name = air pressure at vertical interface for radiation calculation
  units = hPa
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[p_lay]
  standard_name = air_pressure_at_layer_for_RRTMGP_in_hPa
  long_name = air pressure at vertical layer for radiation calculation
  units = hPa
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[tv_lay]
  standard_name = virtual_temperature
  long_name = layer virtual temperature
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F    
[con_pi]
  standard_name = pi
  long_name = ratio of a circle's circumference to its diameter
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
  optional = F 
[con_g]
  standard_name = gravitational_acceleration
  long_name = gravitational acceleration
  units = m s-2
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
  optional = F 
[con_rd]
  standard_name = gas_constant_dry_air
  long_name = ideal gas constant for dry air
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys      
  intent = in
  optional = F   
[con_epsq]
  standard_name = minimum_value_of_specific_humidity
  long_name = floor value for specific humidity
  units = kg kg-1
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
  optional = F       
[iovr]
  standard_name = flag_for_cloud_overlap_method_for_radiation
  long_name = flag for cloud overlap method
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iovr_dcorr]
  standard_name = flag_for_decorrelation_length_cloud_overlap_method
  long_name = choice of decorrelation-length cloud overlap method
  units     = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iovr_exp]
  standard_name = flag_for_exponential_cloud_overlap_method
  long_name = choice of exponential cloud overlap method
  units     = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iovr_exprand]
  standard_name = flag_for_exponential_random_cloud_overlap_method
  long_name = choice of exponential-random cloud overlap method
  units     = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[idcor]
  standard_name = flag_for_decorrelation_length_method
  long_name = flag for decorrelation length method used in cloud overlap method (iovr)
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[idcor_con]
  standard_name = flag_for_constant_decorrelation_length_method
  long_name = choice of decorrelation length computation (costant)
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[idcor_hogan]
  standard_name = flag_for_hogan_decorrelation_length_method
  long_name = choice of decorrelation length computation (hogan)
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[idcor_oreopoulos]
  standard_name = flag_for_oreopoulos_decorrelation_length_method
  long_name = choice of decorrelation length computation (oreopoulos)
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[dcorr_con]
  standard_name = decorreltion_length_used_by_overlap_method
  long_name = decorrelation length (default) used by cloud overlap method (iovr)
  units = km
  dimensions = ()
  type = real
  intent = in
  kind = kind_phys
  optional = F
[cld_frac]
  standard_name = total_cloud_fraction
  long_name = layer total cloud fraction
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F  
[de_lgth]
  standard_name = cloud_decorrelation_length
  long_name = cloud decorrelation length
  units = km
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = out
  optional = F   
[cloud_overlap_param]
  standard_name = cloud_overlap_param
  long_name = cloud overlap parameter
  units = km
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = out
  optional = F
[precip_overlap_param]
  standard_name = precip_overlap_param
  long_name = precipitation overlap parameter
  units = km
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = out
  optional = F  
[deltaZc]
  standard_name = layer_thickness
  long_name = layer_thickness
  units = m
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = out
  optional = F    
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F  
