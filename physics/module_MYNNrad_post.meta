[ccpp-arg-table]
  name = mynnrad_post_run
  type = scheme
[ix]
  standard_name = horizontal_dimension
  long_name = horizontal dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[im]
  standard_name = horizontal_loop_extent
  long_name = horizontal loop extent
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[levs]
  standard_name = vertical_dimension
  long_name = vertical layer dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[flag_init]
  standard_name = flag_for_first_time_step
  long_name = flag signaling first time step for time integration loop
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[flag_restart]
  standard_name = flag_for_restart
  long_name = flag for restart (warmstart) or coldstart
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[qc]
  standard_name = cloud_condensed_water_mixing_ratio
  long_name = moist (dry+vapor, no condensates) mixing ratio of cloud water (condensate)
  units = kg kg-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = out
  optional = F
[qi]
  standard_name = ice_water_mixing_ratio
  long_name = moist (dry+vapor, no condensates) mixing ratio of ice water
  units = kg kg-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = out
  optional = F
[qc_save]
  standard_name = cloud_condensed_water_mixing_ratio_save
  long_name = moist (dry+vapor, no condensates) mixing ratio of cloud water (condensate) before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[qi_save]
  standard_name = ice_water_mixing_ratio_save
  long_name = moist (dry+vapor, no condensates) mixing ratio of ice water before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F
