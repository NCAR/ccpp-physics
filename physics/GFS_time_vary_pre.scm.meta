[ccpp-table-properties]
  name = GFS_time_vary_pre
  type = scheme
  dependencies = funcphys.f90,machine.F

########################################################################
[ccpp-arg-table]
  name = GFS_time_vary_pre_init
  type = scheme
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F

########################################################################
[ccpp-arg-table]
  name = GFS_time_vary_pre_finalize
  type = scheme
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F

########################################################################
[ccpp-arg-table]
  name = GFS_time_vary_pre_run
  type = scheme
[jdat]
  standard_name = forecast_date_and_time
  long_name = current forecast date and time
  units = none
  dimensions = (8)
  type = integer
  intent = in
  optional = F
[idat]
  standard_name = date_and_time_at_model_initialization
  long_name = initialization date and time
  units = none
  dimensions = (8)
  type = integer
  intent = in
  optional = F
[dtp]
  standard_name = time_step_for_physics
  long_name = physics timestep
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
  optional = F
[lsm]
  standard_name = flag_for_land_surface_scheme
  long_name = flag for land surface model
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[lsm_noahmp]
  standard_name = flag_for_noahmp_land_surface_scheme
  long_name = flag for NOAH MP land surface model
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[nsswr]
  standard_name = number_of_timesteps_between_shortwave_radiation_calls
  long_name = number of timesteps between shortwave radiation calls
  units = 
  dimensions = ()
  type = integer
  intent = in
  optional = F
[nslwr]
  standard_name = number_of_timesteps_between_longwave_radiation_calls
  long_name = number of timesteps between longwave radiation calls
  units = 
  dimensions = ()
  type = integer
  intent = in
  optional = F
[idate]
  standard_name = date_and_time_at_model_initialization_reordered
  long_name = initial date with different size and ordering
  units = none
  dimensions = (4)
  type = integer
  intent = in
  optional = F
[debug]
  standard_name = flag_debug
  long_name = control flag for debug
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[me]
  standard_name = mpi_rank
  long_name = current MPI-rank
  units = index
  dimensions = ()
  type = integer
  intent = in
  optional = F
[master]
  standard_name = mpi_root
  long_name = master MPI-rank
  units = index
  dimensions = ()
  type = integer
  intent = in
  optional = F
[nscyc]
  standard_name = number_of_timesteps_between_surface_cycling_calls
  long_name = number of timesteps between surface cycling calls
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[sec]
  standard_name = seconds_elapsed_since_model_initialization
  long_name = seconds elapsed since model initialization
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
  intent = out
  optional = F
[phour]
  standard_name = forecast_time_at_previous_timestep
  long_name = forecast time at the previous timestep
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
  intent = out
  optional = F
[zhour]
  standard_name = time_since_diagnostics_zeroed
  long_name = time since diagnostics variables have been zeroed
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
  intent = out
  optional = F
[fhour]
  standard_name = forecast_time
  long_name = current forecast time
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
  intent = out
  optional = F
[kdt]
  standard_name = index_of_time_step
  long_name = current forecast iteration
  units = index
  dimensions = ()
  type = integer
  intent = out
  optional = F
[julian]
  standard_name = julian_day
  long_name = julian day
  units = days
  dimensions = ()
  type = real
  kind = kind_phys
  intent = out
  optional = F
[yearlen]
  standard_name = number_of_days_in_year
  long_name = number of days in a year
  units = days
  dimensions = ()
  type = integer
  intent = out
  optional = F
[ipt]
  standard_name = index_for_diagnostic_printout
  long_name = horizontal index for point used for diagnostic printout
  units = index 
  dimensions = ()
  type = integer
  intent = out
  optional = F
[lprnt]
  standard_name = flag_print
  long_name = control flag for diagnostic print out
  units = flag
  dimensions = ()
  type = logical
  intent = out
  optional = F
[lssav]
  standard_name = flag_diagnostics
  long_name = logical flag for storing diagnostics
  units = flag
  dimensions = ()
  type = logical
  intent = out
  optional = F
[lsswr]
  standard_name = flag_to_calc_sw
  long_name = logical flags for sw radiation calls
  units = flag
  dimensions = ()
  type = logical
  intent = out
  optional = F
[lslwr]
  standard_name = flag_to_calc_lw
  long_name = logical flags for lw radiation calls
  units = flag
  dimensions = ()
  type = logical
  intent = out
  optional = F
[solhr]
  standard_name = forecast_hour_of_the_day
  long_name = time in hours after 00z at the current timestep
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
  intent = out
  optional = F
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F
