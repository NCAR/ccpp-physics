[ccpp-table-properties]
  name = sgscloud_radpre
  type = scheme
  dependencies = funcphys.f90,iounitdef.f,machine.F,module_bfmicrophysics.f,physcons.F90,radcons.f90,radiation_clouds.f,module_mp_thompson.F90

########################################################################
[ccpp-arg-table]
  name = sgscloud_radpre_run
  type = scheme
[im]
  standard_name = horizontal_loop_extent
  long_name = horizontal loop extent
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[levs]
  standard_name = vertical_dimension
  long_name = vertical layer dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[flag_init]
  standard_name = flag_for_first_time_step
  long_name = flag signaling first time step for time integration loop
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[flag_restart]
  standard_name = flag_for_restart
  long_name = flag for restart (warmstart) or coldstart
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[qc]
  standard_name = cloud_condensed_water_mixing_ratio
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[qi]
  standard_name = ice_water_mixing_ratio
  long_name = ratio of mass of ice water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[qv]
  standard_name = water_vapor_specific_humidity
  long_name = water vapor specific humidity
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[T3D]
  standard_name = air_temperature
  long_name = layer mean air temperature
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[P3D]
  standard_name = air_pressure
  long_name = mean layer pressure
  units = Pa
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[qr]
  standard_name = rain_water_mixing_ratio
  long_name = moist (dry+vapor, no condensates) mixing ratio of rain water
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[qs]
  standard_name = snow_water_mixing_ratio
  long_name = moist (dry+vapor, no condensates) mixing ratio of snow water
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[qg]
  standard_name = graupel_mixing_ratio
  long_name = graupel mixing ratio wrt dry+vapor (no condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[qci_conv]
  standard_name = convective_cloud_condesate_after_rainout
  long_name = convective cloud condesate after rainout
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[imfdeepcnv]
  standard_name = flag_for_mass_flux_deep_convection_scheme
  long_name = flag for mass-flux deep convection scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[imfdeepcnv_gf]
  standard_name = flag_for_gf_deep_convection_scheme
  long_name = flag for Grell-Freitas deep convection scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[qc_save]
  standard_name = cloud_condensed_water_mixing_ratio_save
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates) before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[qi_save]
  standard_name = ice_water_mixing_ratio_save
  long_name = ratio of mass of ice water to mass of dry air plus vapor (without condensates) before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[QC_BL]
  standard_name = subgrid_cloud_water_mixing_ratio_pbl
  long_name = subgrid cloud water mixing ratio from PBL scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[QI_BL]
  standard_name = subgrid_cloud_ice_mixing_ratio_pbl
  long_name = subgrid cloud ice mixing ratio from PBL scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[CLDFRA_BL]
  standard_name = subgrid_cloud_fraction_pbl
  long_name = subgrid cloud fraction from PBL scheme
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[delp]
  standard_name = layer_pressure_thickness_for_radiation
  long_name = layer pressure thickness on radiation levels
  units = hPa
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[clouds1]
  standard_name = total_cloud_fraction
  long_name = layer total cloud fraction
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[clouds2]
  standard_name = cloud_liquid_water_path
  long_name = layer cloud liquid water path
  units = g m-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[clouds3]
  standard_name = mean_effective_radius_for_liquid_cloud
  long_name = mean effective radius for liquid cloud
  units = um
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[clouds4]
  standard_name = cloud_ice_water_path
  long_name = layer cloud ice water path
  units = g m-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[clouds5]
  standard_name = mean_effective_radius_for_ice_cloud
  long_name = mean effective radius for ice cloud
  units = um
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[slmsk]
  standard_name = sea_land_ice_mask_real
  long_name = landmask: sea/land/ice=0/1/2
  units = flag
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[nlay]
  standard_name = adjusted_vertical_layer_dimension_for_radiation
  long_name = number of vertical layers for radiation
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[plyr]
  standard_name = air_pressure_at_layer_for_radiation_in_hPa
  long_name = air pressure at vertical layer for radiation calculation
  units = hPa
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
  intent = in 
  optional = F
[xlat]
  standard_name = latitude
  long_name = grid latitude
  units = radian
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[dz]
  standard_name = layer_thickness_for_radiation
  long_name = layer thickness on radiation levels
  units = km
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[de_lgth]
  standard_name = cloud_decorrelation_length
  long_name = cloud decorrelation length
  units = km
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[cldsa]
  standard_name = cloud_area_fraction_for_radiation
  long_name = fraction of clouds for low, middle,high, total and BL
  units = frac
  dimensions = (horizontal_loop_extent,5)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[mtopa]
  standard_name = model_layer_number_at_cloud_top
  long_name = vertical indices for low, middle and high cloud tops
  units = index
  dimensions = (horizontal_loop_extent,3)
  type = integer
  intent = inout
  optional = F
[mbota]
  standard_name = model_layer_number_at_cloud_base
  long_name = vertical indices for low, middle and high cloud bases
  units = index
  dimensions = (horizontal_loop_extent,3)
  type = integer
  intent = inout
  optional = F
[do_mynnedmf]
  standard_name = do_mynnedmf
  long_name = flag to activate MYNN-EDMF
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[imp_physics]
  standard_name = flag_for_microphysics_scheme
  long_name = choice of microphysics scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[imp_physics_gfdl]
  standard_name = flag_for_gfdl_microphysics_scheme
  long_name = choice of GFDL microphysics scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iovr]
  standard_name = flag_for_cloud_overlap_method_for_radiation
  long_name = max-random overlap clouds
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F
