<?xml version='1.0' encoding='utf-8'?>
<scheme module="mynnrad_pre">
  <subroutine name="mynnrad_pre_init" />
  <subroutine name="mynnrad_pre_run">
    <variable name="horizontal_dimension">
      <standard_name>horizontal_dimension</standard_name>
      <long_name>horizontal dimension</long_name>
      <units>count</units>
      <local_name>ix</local_name>
      <type>integer</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="horizontal_loop_extent">
      <standard_name>horizontal_loop_extent</standard_name>
      <long_name>horizontal loop extent</long_name>
      <units>count</units>
      <local_name>im</local_name>
      <type>integer</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="vertical_dimension">
      <standard_name>vertical_dimension</standard_name>
      <long_name>vertical layer dimension</long_name>
      <units>count</units>
      <local_name>levs</local_name>
      <type>integer</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="cloud_condensed_water_mixing_ratio">
      <standard_name>cloud_condensed_water_mixing_ratio</standard_name>
      <long_name>moist (dry+vapor, no condensates) mixing ratio of cloud water (condensate)</long_name>
      <units>kg kg-1</units>
      <local_name>qc</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="ice_water_mixing_ratio">
      <standard_name>ice_water_mixing_ratio</standard_name>
      <long_name>moist (dry+vapor, no condensates) mixing ratio of ice water</long_name>
      <units>kg kg-1</units>
      <local_name>qi</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="air_temperature">
      <standard_name>air_temperature</standard_name>
      <long_name>layer mean air temperature</long_name>
      <units>K</units>
      <local_name>T3D</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="cloud_condensed_water_mixing_ratio_save">
      <standard_name>cloud_condensed_water_mixing_ratio_save</standard_name>
      <long_name>moist (dry+vapor, no condensates) mixing ratio of cloud water (condensate) before entering a physics scheme</long_name>
      <units>kg kg-1</units>
      <local_name>qc_save</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="ice_water_mixing_ratio_save">
      <standard_name>ice_water_mixing_ratio_save</standard_name>
      <long_name>moist (dry+vapor, no condensates) mixing ratio of ice water before entering a physics scheme</long_name>
      <units>kg kg-1</units>
      <local_name>qi_save</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="subgrid_cloud_mixing_ratio_pbl">
      <standard_name>subgrid_cloud_mixing_ratio_pbl</standard_name>
      <long_name>subgrid cloud cloud mixing ratio from PBL scheme</long_name>
      <units>kg kg-1</units>
      <local_name>QC_BL</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="subgrid_cloud_fraction_pbl">
      <standard_name>subgrid_cloud_fraction_pbl</standard_name>
      <long_name>subgrid cloud fraction from PBL scheme</long_name>
      <units>frac</units>
      <local_name>CLDFRA_BL</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="layer_pressure_thickness_for_radiation">
      <standard_name>layer_pressure_thickness_for_radiation</standard_name>
      <long_name>layer pressure thickness on radiation levels</long_name>
      <units>hPa</units>
      <local_name>delp</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="total_cloud_fraction">
      <standard_name>total_cloud_fraction</standard_name>
      <long_name>layer total cloud fraction</long_name>
      <units>frac</units>
      <local_name>clouds1</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="cloud_liquid_water_path">
      <standard_name>cloud_liquid_water_path</standard_name>
      <long_name>layer cloud liquid water path</long_name>
      <units>g m-2</units>
      <local_name>clouds2</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="mean_effective_radius_for_liquid_cloud">
      <standard_name>mean_effective_radius_for_liquid_cloud</standard_name>
      <long_name>mean effective radius for liquid cloud</long_name>
      <units>micron</units>
      <local_name>clouds3</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="cloud_ice_water_path">
      <standard_name>cloud_ice_water_path</standard_name>
      <long_name>layer cloud ice water path</long_name>
      <units>g m-2</units>
      <local_name>clouds4</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="mean_effective_radius_for_ice_cloud">
      <standard_name>mean_effective_radius_for_ice_cloud</standard_name>
      <long_name>mean effective radius for ice cloud</long_name>
      <units>micron</units>
      <local_name>clouds5</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="sea_land_ice_mask_real">
      <standard_name>sea_land_ice_mask_real</standard_name>
      <long_name>landmask: sea/land/ice=0/1/2</long_name>
      <units>flag</units>
      <local_name>slmsk</local_name>
      <type>real</type>
      <rank>(:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="ccpp_error_message">
      <standard_name>ccpp_error_message</standard_name>
      <long_name>error message for error handling in CCPP</long_name>
      <units>none</units>
      <local_name>errmsg</local_name>
      <type>character</type>
      <rank />
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
    <variable name="ccpp_error_flag">
      <standard_name>ccpp_error_flag</standard_name>
      <long_name>error flag for error handling in CCPP</long_name>
      <units>flag</units>
      <local_name>errflg</local_name>
      <type>integer</type>
      <rank />
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_mynnrad_pre SCHEME_mynnrad_pre SUBROUTINE_mynnrad_pre_run</container>
    </variable>
  </subroutine>
  <subroutine name="mynnrad_pre_finalize" />
</scheme>
