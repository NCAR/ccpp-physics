[ccpp-table-properties]
  name = gfdl_cloud_microphys
  type = scheme
  dependencies = ../../hooks/machine.F
  dependencies = ../module_mp_radar.F90
  dependencies = module_gfdl_cloud_microphys.F90

########################################################################
[ccpp-arg-table]
  name = gfdl_cloud_microphys_init
  type = scheme
[me]
  standard_name = mpi_rank
  long_name = MPI rank of current process
  units = index
  dimensions = ()
  type = integer
  intent = in
[master]
  standard_name = mpi_root
  long_name = MPI rank of master process
  units = index
  dimensions = ()
  type = integer
  intent = in
[nlunit]
  standard_name = iounit_of_namelist
  long_name = fortran unit number for opening nameliust file
  units = none
  dimensions = ()
  type = integer
  intent = in
[input_nml_file]
  standard_name = filename_of_internal_namelist
  long_name = character string to store full namelist contents
  units = none
  dimensions = (number_of_lines_in_internal_namelist)
  type = character
  kind = len=*
  intent = in
[logunit]
  standard_name = iounit_of_log
  long_name = fortran unit number for writing logfile
  units = none
  dimensions = ()
  type = integer
  intent = in
[fn_nml]
  standard_name = filename_of_namelist
  long_name = namelist filename
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = in
[imp_physics]
  standard_name = control_for_microphysics_scheme
  long_name = choice of microphysics scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[imp_physics_gfdl]
  standard_name = identifier_for_gfdl_microphysics_scheme
  long_name = choice of GFDL microphysics scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[do_shoc]
  standard_name = flag_for_shoc
  long_name = flag to indicate use of SHOC
  units = flag
  dimensions = ()
  type = logical
  intent = in
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
[errflg]
  standard_name = ccpp_error_code
  long_name = error code for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out

########################################################################
[ccpp-arg-table]
  name = gfdl_cloud_microphys_finalize
  type = scheme
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
[errflg]
  standard_name = ccpp_error_code
  long_name = error code for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out

########################################################################
[ccpp-arg-table]
  name = gfdl_cloud_microphys_run
  type = scheme
[levs]
  standard_name = vertical_layer_dimension
  long_name = number of vertical levels
  units = count
  dimensions = ()
  type = integer
  intent = in
[im]
  standard_name = horizontal_loop_extent
  long_name = horizontal loop extent
  units = count
  dimensions = ()
  type = integer
  intent = in
[rainmin]
  standard_name = lwe_thickness_of_minimum_rain_amount
  long_name = minimum rain amount
  units = m
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[con_g]
  standard_name = gravitational_acceleration
  long_name = gravitational acceleration
  units = m s-2
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[con_fvirt]
  standard_name = ratio_of_vapor_to_dry_air_gas_constants_minus_one
  long_name = rv/rd - 1 (rv = ideal gas constant for water vapor)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[con_rd]
  standard_name = gas_constant_of_dry_air
  long_name = ideal gas constant for dry air
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[con_eps]
  standard_name = ratio_of_dry_air_to_water_vapor_gas_constants
  long_name = rd/rv
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[frland]
  standard_name = land_area_fraction_for_microphysics
  long_name = land area fraction used in microphysics schemes
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = in
[garea]
  standard_name = cell_area
  long_name = area of grid cell
  units = m2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = in
[islmsk]
  standard_name = sea_land_ice_mask
  long_name = sea/land/ice mask (=0/1/2)
  units = flag
  dimensions = (horizontal_loop_extent)
  type = integer
  intent = in
[gq0]
  standard_name = specific_humidity_of_new_state
  long_name = water vapor specific humidity updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[gq0_ntcw]
  standard_name = cloud_liquid_water_mixing_ratio_of_new_state
  long_name = cloud condensed water mixing ratio updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[gq0_ntrw]
  standard_name = rain_mixing_ratio_of_new_state
  long_name = moist mixing ratio of rain updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[gq0_ntiw]
  standard_name = cloud_ice_mixing_ratio_of_new_state
  long_name = moist mixing ratio of cloud ice updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[gq0_ntsw]
  standard_name = snow_mixing_ratio_of_new_state
  long_name = moist mixing ratio of snow updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[gq0_ntgl]
  standard_name = graupel_mixing_ratio_of_new_state
  long_name = moist ratio of mass of graupel to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[gq0_ntclamt]
  standard_name = cloud_area_fraction_in_atmosphere_layer_of_new_state
  long_name = cloud fraction updated by physics
  units = frac
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[gt0]
  standard_name = air_temperature_of_new_state
  long_name = air temperature updated by physics
  units = K
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[gu0]
  standard_name = x_wind_of_new_state
  long_name = zonal wind updated by physics
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[gv0]
  standard_name = y_wind_of_new_state
  long_name = meridional wind updated by physics
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[vvl]
  standard_name = lagrangian_tendency_of_air_pressure
  long_name = layer mean vertical velocity
  units = Pa s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[prsl]
  standard_name = air_pressure
  long_name = mean layer pressure
  units = Pa
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[phii]
  standard_name = geopotential_at_interface
  long_name = geopotential at model layer interfaces
  units = m2 s-2
  dimensions = (horizontal_loop_extent,vertical_interface_dimension)
  type = real
  kind = kind_phys
  intent = in
[del]
  standard_name = air_pressure_difference_between_midlayers
  long_name = air pressure difference between mid-layers
  units = Pa
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[rain0]
  standard_name = lwe_thickness_of_explicit_rain_amount
  long_name = explicit rain on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = out
  optional = True
[ice0]
  standard_name = lwe_thickness_of_ice_amount
  long_name = ice fall on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = out
  optional = True
[snow0]
  standard_name = lwe_thickness_of_snow_amount
  long_name = snow fall on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = out
  optional = True
[graupel0]
  standard_name = lwe_thickness_of_graupel_amount
  long_name = graupel fall on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = out
  optional = True
[prcp0]
  standard_name = lwe_thickness_of_explicit_precipitation_amount
  long_name = explicit precipitation (rain, ice, snow, graupel) on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = out
[sr]
  standard_name = ratio_of_snowfall_to_rainfall
  long_name = snow ratio: ratio of snow to total precipitation
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = out
[dtp]
  standard_name = timestep_for_physics
  long_name = physics timestep
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[hydrostatic]
  standard_name = flag_for_hydrostatic_solver
  long_name = flag indicating hydrostatic solver
  units = flag
  dimensions = ()
  type = logical
  intent = in
[phys_hydrostatic]
  standard_name = flag_for_hydrostatic_heating_from_physics
  long_name = flag indicating hydrostatic heating from physics
  units = flag
  dimensions = ()
  type = logical
  intent = in
[lradar]
  standard_name = flag_for_radar_reflectivity
  long_name = flag for radar reflectivity
  units = flag
  dimensions = ()
  type = logical
  intent = in
[refl_10cm]
  standard_name = radar_reflectivity_10cm
  long_name = instantaneous refl_10cm
  units = dBZ
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[reset]
  standard_name = flag_reset_maximum_hourly_fields
  long_name = flag for resetting maximum hourly fields
  units = flag
  dimensions = ()
  type = logical
  intent = in
[effr_in]
  standard_name = flag_for_cloud_effective_radii
  long_name = flag for cloud effective radii calculations in GFDL microphysics
  units = flag
  dimensions = ()
  type = logical
  intent = in
[rew]
  standard_name = effective_radius_of_stratiform_cloud_liquid_water_particle
  long_name = eff. radius of cloud liquid water particle in micrometer
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = True
[rei]
  standard_name = effective_radius_of_stratiform_cloud_ice_particle
  long_name = eff. radius of cloud ice water particle in micrometer
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = True
[rer]
  standard_name = effective_radius_of_stratiform_cloud_rain_particle
  long_name = effective radius of cloud rain particle in micrometers
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = True
[res]
  standard_name = effective_radius_of_stratiform_cloud_snow_particle
  long_name = effective radius of cloud snow particle in micrometers
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = True
[reg]
  standard_name = effective_radius_of_stratiform_cloud_graupel_particle
  long_name = eff. radius of cloud graupel particle in micrometer
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = True
[cplchm]
  standard_name = flag_for_chemistry_coupling
  long_name = flag controlling cplchm collection (default off)
  units = flag
  dimensions = ()
  type = logical
  intent = in
[pfi_lsan]
  standard_name = ice_flux_due_to_large_scale_precipitation
  long_name = instantaneous 3D flux of ice from nonconvective precipitation
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = True
[pfl_lsan]
  standard_name = liquid_flux_due_to_large_scale_precipitation
  long_name = instantaneous 3D flux of liquid water from nonconvective precipitation
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = True
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
[errflg]
  standard_name = ccpp_error_code
  long_name = error code for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out
