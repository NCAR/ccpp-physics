<?xml version='1.0' encoding='utf-8'?>
<scheme module="cu_gf_driver">
  <subroutine name="cu_gf_driver_run">
    <variable name="number_of_total_tracers">
      <standard_name>number_of_total_tracers</standard_name>
      <long_name>number of total tracers</long_name>
      <units>count</units>
      <local_name>tottracer</local_name>
      <type>integer</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="number_of_vertical_diffusion_tracers">
      <standard_name>number_of_vertical_diffusion_tracers</standard_name>
      <long_name>number of tracers to diffuse vertically</long_name>
      <units>count</units>
      <local_name>ntrac</local_name>
      <type>integer</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="cell_area">
      <standard_name>cell_area</standard_name>
      <long_name>grid cell area</long_name>
      <units>m2</units>
      <local_name>garea</local_name>
      <type>real</type>
      <rank>(:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="horizontal_loop_extent">
      <standard_name>horizontal_loop_extent</standard_name>
      <long_name>horizontal loop extent</long_name>
      <units>count</units>
      <local_name>im</local_name>
      <type>integer</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="horizontal_dimension">
      <standard_name>horizontal_dimension</standard_name>
      <long_name>horizontal dimension</long_name>
      <units>count</units>
      <local_name>ix</local_name>
      <type>integer</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="vertical_dimension">
      <standard_name>vertical_dimension</standard_name>
      <long_name>vertical layer dimension</long_name>
      <units>count</units>
      <local_name>km</local_name>
      <type>integer</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="time_step_for_physics">
      <standard_name>time_step_for_physics</standard_name>
      <long_name>physics time step</long_name>
      <units>s</units>
      <local_name>dt</local_name>
      <type>real</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="conv_activity_counter">
      <standard_name>conv_activity_counter</standard_name>
      <long_name>convective activity memory</long_name>
      <units>none</units>
      <local_name>cactiv</local_name>
      <type>integer</type>
      <rank>(:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="temperature_tendency_due_to_dynamics">
      <standard_name>temperature_tendency_due_to_dynamics</standard_name>
      <long_name>temperature tendency due to dynamics only</long_name>
      <units>K s-1</units>
      <local_name>forcet</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="moisture_tendency_due_to_dynamics">
      <standard_name>moisture_tendency_due_to_dynamics</standard_name>
      <long_name>moisture tendency due to dynamics only</long_name>
      <units>kg kg-1 s-1</units>
      <local_name>forceqv_spechum</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="geopotential">
      <standard_name>geopotential</standard_name>
      <long_name>layer geopotential</long_name>
      <units>m2 s-2</units>
      <local_name>phil</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="lwe_thickness_of_deep_convective_precipitation_amount">
      <standard_name>lwe_thickness_of_deep_convective_precipitation_amount</standard_name>
      <long_name>deep convective rainfall amount on physics timestep</long_name>
      <units>m</units>
      <local_name>raincv</local_name>
      <type>real</type>
      <rank>(:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="water_vapor_specific_humidity_updated_by_physics">
      <standard_name>water_vapor_specific_humidity_updated_by_physics</standard_name>
      <long_name>water vapor specific humidity updated by physics</long_name>
      <units>kg kg-1</units>
      <local_name>qv_spechum</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="air_temperature_updated_by_physics">
      <standard_name>air_temperature_updated_by_physics</standard_name>
      <long_name>updated temperature</long_name>
      <units>K</units>
      <local_name>t</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="cloud_work_function">
      <standard_name>cloud_work_function</standard_name>
      <long_name>cloud work function</long_name>
      <units>m2 s-2</units>
      <local_name>cld1d</local_name>
      <type>real</type>
      <rank>(:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="x_wind_updated_by_physics">
      <standard_name>x_wind_updated_by_physics</standard_name>
      <long_name>updated x-direction wind</long_name>
      <units>m s-1</units>
      <local_name>us</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="y_wind_updated_by_physics">
      <standard_name>y_wind_updated_by_physics</standard_name>
      <long_name>updated y-direction wind</long_name>
      <units>m s-1</units>
      <local_name>vs</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="air_temperature">
      <standard_name>air_temperature</standard_name>
      <long_name>mid-layer temperature</long_name>
      <units>K</units>
      <local_name>t2di</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="omega">
      <standard_name>omega</standard_name>
      <long_name>layer mean vertical velocity</long_name>
      <units>Pa s-1</units>
      <local_name>w</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="water_vapor_specific_humidity">
      <standard_name>water_vapor_specific_humidity</standard_name>
      <long_name>water vapor specific humidity</long_name>
      <units>kg kg-1</units>
      <local_name>qv2di_spechum</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="air_pressure">
      <standard_name>air_pressure</standard_name>
      <long_name>mean layer pressure</long_name>
      <units>Pa</units>
      <local_name>p2di</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="surface_air_pressure">
      <standard_name>surface_air_pressure</standard_name>
      <long_name>surface pressure</long_name>
      <units>Pa</units>
      <local_name>psuri</local_name>
      <type>real</type>
      <rank>(:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="vertical_index_at_cloud_base">
      <standard_name>vertical_index_at_cloud_base</standard_name>
      <long_name>index for cloud base</long_name>
      <units>index</units>
      <local_name>hbot</local_name>
      <type>integer</type>
      <rank>(:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="vertical_index_at_cloud_top">
      <standard_name>vertical_index_at_cloud_top</standard_name>
      <long_name>index for cloud top</long_name>
      <units>index</units>
      <local_name>htop</local_name>
      <type>integer</type>
      <rank>(:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="flag_deep_convection">
      <standard_name>flag_deep_convection</standard_name>
      <long_name>deep convection: 0=no, 1=yes</long_name>
      <units>flag</units>
      <local_name>kcnv</local_name>
      <type>integer</type>
      <rank>(:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="sea_land_ice_mask">
      <standard_name>sea_land_ice_mask</standard_name>
      <long_name>landmask: sea/land/ice=0/1/2</long_name>
      <units>flag</units>
      <local_name>xland</local_name>
      <type>integer</type>
      <rank>(:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="kinematic_surface_upward_sensible_heat_flux">
      <standard_name>kinematic_surface_upward_sensible_heat_flux</standard_name>
      <long_name>kinematic surface upward sensible heat flux</long_name>
      <units>K m s-1</units>
      <local_name>hfx2</local_name>
      <type>real</type>
      <rank>(:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="kinematic_surface_upward_latent_heat_flux">
      <standard_name>kinematic_surface_upward_latent_heat_flux</standard_name>
      <long_name>kinematic surface upward latent heat flux</long_name>
      <units>kg kg-1 m s-1</units>
      <local_name>qfx2</local_name>
      <type>real</type>
      <rank>(:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="convective_transportable_tracers">
      <standard_name>convective_transportable_tracers</standard_name>
      <long_name>cloud water and other convective trans. tracers</long_name>
      <units>kg kg-1</units>
      <local_name>clw</local_name>
      <type>real</type>
      <rank>(:,:,:)</rank>
      <intent>inout</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="atmosphere_boundary_layer_thickness">
      <standard_name>atmosphere_boundary_layer_thickness</standard_name>
      <long_name>PBL thickness</long_name>
      <units>m</units>
      <local_name>pbl</local_name>
      <type>real</type>
      <rank>(:)</rank>
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="instantaneous_atmosphere_updraft_convective_mass_flux">
      <standard_name>instantaneous_atmosphere_updraft_convective_mass_flux</standard_name>
      <long_name>(updraft mass flux) * delt</long_name>
      <units>kg m-2</units>
      <local_name>ud_mf</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="instantaneous_atmosphere_downdraft_convective_mass_flux">
      <standard_name>instantaneous_atmosphere_downdraft_convective_mass_flux</standard_name>
      <long_name>(downdraft mass flux) * delt</long_name>
      <units>kg m-2</units>
      <local_name>dd_mf</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="instantaneous_atmosphere_detrainment_convective_mass_flux">
      <standard_name>instantaneous_atmosphere_detrainment_convective_mass_flux</standard_name>
      <long_name>(detrainment mass flux) * delt</long_name>
      <units>kg m-2</units>
      <local_name>dt_mf</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="convective_cloud_water_mixing_ratio">
      <standard_name>convective_cloud_water_mixing_ratio</standard_name>
      <long_name>moist convective cloud water mixing ratio</long_name>
      <units>kg kg-1</units>
      <local_name>cnvw_moist</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="convective_cloud_cover">
      <standard_name>convective_cloud_cover</standard_name>
      <long_name>convective cloud cover</long_name>
      <units>frac</units>
      <local_name>cnvc</local_name>
      <type>real</type>
      <rank>(:,:)</rank>
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="flag_for_mass_flux_shallow_convection_scheme">
      <standard_name>flag_for_mass_flux_shallow_convection_scheme</standard_name>
      <long_name>flag for mass-flux shallow convection scheme</long_name>
      <units>flag</units>
      <local_name>imfshalcnv</local_name>
      <type>integer</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="ccpp_error_message">
      <standard_name>ccpp_error_message</standard_name>
      <long_name>error message for error handling in CCPP</long_name>
      <units>none</units>
      <local_name>errmsg</local_name>
      <type>character</type>
      <rank />
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
    <variable name="ccpp_error_flag">
      <standard_name>ccpp_error_flag</standard_name>
      <long_name>error flag for error handling in CCPP</long_name>
      <units>flag</units>
      <local_name>errflg</local_name>
      <type>integer</type>
      <rank />
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_run</container>
    </variable>
  </subroutine>
  <subroutine name="cu_gf_driver_init">
    <variable name="mpi_rank">
      <standard_name>mpi_rank</standard_name>
      <long_name>current MPI-rank</long_name>
      <units>index</units>
      <local_name>mpirank</local_name>
      <type>integer</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_init</container>
    </variable>
    <variable name="mpi_root">
      <standard_name>mpi_root</standard_name>
      <long_name>master MPI-rank</long_name>
      <units>index</units>
      <local_name>mpiroot</local_name>
      <type>integer</type>
      <rank />
      <intent>in</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_init</container>
    </variable>
    <variable name="ccpp_error_message">
      <standard_name>ccpp_error_message</standard_name>
      <long_name>error message for error handling in CCPP</long_name>
      <units>none</units>
      <local_name>errmsg</local_name>
      <type>character</type>
      <rank />
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_init</container>
    </variable>
    <variable name="ccpp_error_flag">
      <standard_name>ccpp_error_flag</standard_name>
      <long_name>error flag for error handling in CCPP</long_name>
      <units>flag</units>
      <local_name>errflg</local_name>
      <type>integer</type>
      <rank />
      <intent>out</intent>
      <optional>F</optional>
      <container>MODULE_cu_gf_driver SCHEME_cu_gf_driver SUBROUTINE_cu_gf_driver_init</container>
    </variable>
  </subroutine>
  <subroutine name="cu_gf_driver_finalize" />
</scheme>
