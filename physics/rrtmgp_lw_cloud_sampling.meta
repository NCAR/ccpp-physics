[ccpp-table-properties]
  name = rrtmgp_lw_cloud_sampling
  type = scheme
  dependencies = machine.F,mersenne_twister.f,physparam.f,rrtmgp_sampling.F90,rrtmgp_aux.F90

########################################################################
[ccpp-arg-table]
  name = rrtmgp_lw_cloud_sampling_init
  type = scheme
[lw_gas_props]
  standard_name = coefficients_for_lw_gas_optics
  long_name = DDT containing spectral information for RRTMGP LW radiation scheme
  units = DDT
  dimensions = ()
  type = ty_gas_optics_rrtmgp
  intent = in
  optional = F
[ipsdlw0]
  standard_name = initial_permutation_seed_lw
  long_name = initial seed for McICA LW
  units = none
  dimensions = ()
  type = integer
  intent = out
  optional = F
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F

######################################################
[ccpp-arg-table]
  name = rrtmgp_lw_cloud_sampling_run
  type = scheme
[doLWrad]
  standard_name = flag_to_calc_lw
  long_name = logical flags for lw radiation calls
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[doGP_lwscat] 
  standard_name = flag_to_include_longwave_scattering_in_cloud_optics
  long_name = logical flag to control the addition of LW scattering in RRTMGP 
  units = flag
  dimensions = ()
  type = logical  
  intent = in
  optional = F    
[ncol]
  standard_name = horizontal_loop_extent
  long_name = horizontal dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[nLev]
  standard_name = vertical_dimension
  long_name = number of vertical levels
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[isubc_lw]
  standard_name = flag_for_lw_clouds_sub_grid_approximation
  long_name = flag for lw clouds sub-grid approximation
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[ipsdlw0]
  standard_name = initial_permutation_seed_lw
  long_name = initial seed for McICA LW
  units = none
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iovr]
  standard_name = flag_for_cloud_overlap_method_for_radiation
  long_name = max-random overlap clouds
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iovr_maxrand]
  standard_name = flag_for_maximum_random_cloud_overlap_method
  long_name = choice of maximum-random cloud overlap method
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iovr_dcorr]
  standard_name = flag_for_decorrelation_length_cloud_overlap_method
  long_name = choice of decorrelation-length cloud overlap method
  units     = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iovr_exp]
  standard_name = flag_for_exponential_cloud_overlap_method
  long_name = choice of exponential cloud overlap method
  units     = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iovr_exprand]
  standard_name = flag_for_exponential_random_cloud_overlap_method
  long_name = choice of exponential-random cloud overlap method
  units     = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iovr_rand]
  standard_name = flag_for_random_cloud_overlap_method
  long_name = choice of random cloud overlap method
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iovr_max]
  standard_name = flag_for_maximum_cloud_overlap_method
  long_name = choice of maximum cloud overlap method
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[icseed_lw]
  standard_name = seed_random_numbers_lw
  long_name = seed for random number generation for longwave radiation
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  intent = in
  optional = F
[cld_frac]
  standard_name = total_cloud_fraction
  long_name = layer total cloud fraction
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[precip_frac]
  standard_name = precipitation_fraction_by_layer
  long_name = precipitation fraction in each layer
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F   
[cloud_overlap_param]
  standard_name = cloud_overlap_param
  long_name = cloud overlap parameter
  units = km
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[precip_overlap_param]
  standard_name = precip_overlap_param
  long_name = precipitation overlap parameter
  units = km
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F   
[lw_gas_props]
  standard_name = coefficients_for_lw_gas_optics
  long_name = DDT containing spectral information for RRTMGP LW radiation scheme
  units = DDT
  dimensions = ()
  type = ty_gas_optics_rrtmgp
  intent = in
  optional = F
[lw_optical_props_cloudsByBand]
  standard_name = longwave_optical_properties_for_cloudy_atmosphere_by_band
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_2str
  intent = in
  optional = F
[lw_optical_props_precipByBand]
  standard_name = longwave_optical_properties_for_precipitation_by_band
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_2str
  intent = in
  optional = F    
[lw_optical_props_clouds]
  standard_name = longwave_optical_properties_for_cloudy_atmosphere
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_2str
  intent = out
  optional = F
[lw_optical_props_precip]
  standard_name = longwave_optical_properties_for_precipitation
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_2str
  intent = out
  optional = F    
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F
