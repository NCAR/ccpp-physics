[ccpp-table-properties]
  name = sgscloud_radpre
  type = scheme
  relative_path = ../../
  dependencies = tools/funcphys.f90,hooks/machine.F
  dependencies = hooks/physcons.F90,Radiation/RRTMG/radcons.f90
  dependencies = Radiation/radiation_clouds.f,MP/module_mp_radar.F90,MP/Thompson/module_mp_thompson.F90

########################################################################
[ccpp-arg-table]
  name = sgscloud_radpre_run
  type = scheme
[im]
  standard_name = horizontal_loop_extent
  long_name = horizontal loop extent
  units = count
  dimensions = ()
  type = integer
  intent = in
[dt]
  standard_name = timestep_for_physics
  long_name = physics time step
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[levs]
  standard_name = vertical_layer_dimension
  long_name = vertical layer dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
[fhswr]
  standard_name = period_of_shortwave_radiation_calls
  long_name = frequency for shortwave radiation
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[flag_init]
  standard_name = flag_for_first_timestep
  long_name = flag signaling first time step for time integration loop
  units = flag
  dimensions = ()
  type = logical
  intent = in
[flag_restart]
  standard_name = flag_for_restart
  long_name = flag for restart (warmstart) or coldstart
  units = flag
  dimensions = ()
  type = logical
  intent = in
[con_g]
  standard_name = gravitational_acceleration
  long_name = gravitational acceleration
  units = m s-2
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[con_pi]
  standard_name = pi
  long_name = ratio of a circle's circumference to its diameter
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[eps]
  standard_name = ratio_of_dry_air_to_water_vapor_gas_constants
  long_name = rd/rv
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[epsm1]
  standard_name = ratio_of_dry_air_to_water_vapor_gas_constants_minus_one
  long_name = (rd/rv) - 1
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[r_v]
  standard_name = gas_constant_water_vapor
  long_name = ideal gas constant for water vapor
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[cpv]
  standard_name = specific_heat_of_water_vapor_at_constant_pressure
  long_name = specific heat of water vapor at constant pressure
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[rcp]
  standard_name = ratio_of_gas_constant_dry_air_to_specific_heat_of_dry_air_at_constant_pressure
  long_name = (rd/cp)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[xlv]
  standard_name = latent_heat_of_vaporization_of_water_at_0C
  long_name = latent heat of evaporation/sublimation
  units = J kg-1
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[xlf]
  standard_name = latent_heat_of_fusion_of_water_at_0C
  long_name = latent heat of fusion
  units = J kg-1
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[cp]
  standard_name = specific_heat_of_dry_air_at_constant_pressure
  long_name = specific heat of dry air at constant pressure
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[do_mynnedmf]
  standard_name = flag_for_mellor_yamada_nakanishi_niino_pbl_scheme
  long_name = flag to activate MYNN-EDMF
  units = flag
  dimensions = ()
  type = logical
  intent = in
[qc]
  standard_name = cloud_liquid_water_mixing_ratio
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[qi]
  standard_name = cloud_ice_mixing_ratio
  long_name = ratio of mass of ice water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[qs]
  standard_name = snow_mixing_ratio
  long_name = ratio of mass of snow water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[qv]
  standard_name = specific_humidity
  long_name = water vapor specific humidity
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[T3D]
  standard_name = air_temperature
  long_name = layer mean air temperature
  units = K
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[P3D]
  standard_name = air_pressure
  long_name = mean layer pressure
  units = Pa
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[exner]
  standard_name = dimensionless_exner_function
  long_name = Exner function at layers
  units = none
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[qr]
  standard_name = rain_mixing_ratio
  long_name = moist (dry+vapor, no condensates) mixing ratio of rain water
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[qg]
  standard_name = graupel_mixing_ratio
  long_name = graupel mixing ratio wrt dry+vapor (no condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[ud_mf]
  standard_name = instantaneous_atmosphere_updraft_convective_mass_flux
  long_name = (updraft mass flux) * delt
  units = kg m-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = True
[qci_conv]
  standard_name = convective_cloud_condesate_after_rainout
  long_name = convective cloud condesate after rainout
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = True
[qlc]
  standard_name = cloud_condensed_water_mixing_ratio_convective_transport_tracer
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates) in the convectively transported tracer array
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[qli]
  standard_name = ice_water_mixing_ratio_convective_transport_tracer
  long_name = ratio of mass of ice water to mass of dry air plus vapor (without condensates) in the convectively transported tracer array
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[imfdeepcnv]
  standard_name = control_for_deep_convection_scheme
  long_name = flag for mass-flux deep convection scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[imfdeepcnv_gf]
  standard_name = identifier_for_grell_freitas_deep_convection
  long_name = flag for Grell-Freitas deep convection scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[imfdeepcnv_c3]
  standard_name = identifier_for_c3_deep_convection
  long_name = flag for C3 deep convection scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[imfdeepcnv_sas]
  standard_name = identifier_for_simplified_arakawa_schubert_deep_convection
  long_name = flag for SAS deep convection scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[qc_save]
  standard_name = cloud_condensed_water_mixing_ratio_save
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates) before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[qi_save]
  standard_name = ice_water_mixing_ratio_save
  long_name = ratio of mass of ice water to mass of dry air plus vapor (without condensates) before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[qs_save]
  standard_name = snow_mixing_ratio_save
  long_name = cloud snow mixing ratio before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[QC_BL]
  standard_name = subgrid_scale_cloud_liquid_water_mixing_ratio
  long_name = subgrid cloud water mixing ratio from PBL scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = True
[QI_BL]
  standard_name = subgrid_scale_cloud_ice_mixing_ratio
  long_name = subgrid cloud ice mixing ratio from PBL scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = True
[CLDFRA_BL]
  standard_name = subgrid_scale_cloud_area_fraction_in_atmosphere_layer
  long_name = subgrid cloud fraction from PBL scheme
  units = frac
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = True
[delp]
  standard_name = layer_pressure_thickness_for_radiation
  long_name = layer pressure thickness on radiation levels
  units = hPa
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
  intent = in
[clouds1]
  standard_name = total_cloud_fraction
  long_name = layer total cloud fraction
  units = frac
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[clouds2]
  standard_name = cloud_liquid_water_path
  long_name = layer cloud liquid water path
  units = g m-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[clouds3]
  standard_name = mean_effective_radius_for_liquid_cloud
  long_name = mean effective radius for liquid cloud
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[clouds4]
  standard_name = cloud_ice_water_path
  long_name = layer cloud ice water path
  units = g m-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[clouds5]
  standard_name = mean_effective_radius_for_ice_cloud
  long_name = mean effective radius for ice cloud
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = inout
[clouds8]
  standard_name = cloud_snow_water_path
  long_name = cloud snow water path
  units = g m-2
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
  intent = inout
[clouds9]
  standard_name = mean_effective_radius_for_snow_flake
  long_name = mean effective radius for snow flake
  units = um
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
  intent = inout
[slmsk]
  standard_name = area_type
  long_name = landmask: sea/land/ice=0/1/2
  units = flag
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = in
[nlay]
  standard_name = adjusted_vertical_layer_dimension_for_radiation
  long_name = number of vertical layers for radiation
  units = count
  dimensions = ()
  type = integer
  intent = in
[plyr]
  standard_name = air_pressure_at_layer_for_radiation_in_hPa
  long_name = air pressure at vertical layer for radiation calculation
  units = hPa
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
  intent = in 
[xlat]
  standard_name = latitude
  long_name = grid latitude
  units = radian
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = in
[dz]
  standard_name = layer_thickness_for_radiation
  long_name = layer thickness on radiation levels
  units = km
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
  intent = in
[de_lgth]
  standard_name = cloud_decorrelation_length
  long_name = cloud decorrelation length
  units = km
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = in
[cldsa]
  standard_name = cloud_area_fraction_for_radiation
  long_name = fraction of clouds for low, middle,high, total and BL
  units = frac
  dimensions = (horizontal_loop_extent,5)
  type = real
  kind = kind_phys
  intent = inout
[mtopa]
  standard_name = model_layer_number_at_cloud_top
  long_name = vertical indices for low, middle and high cloud tops
  units = index
  dimensions = (horizontal_loop_extent,3)
  type = integer
  intent = inout
[mbota]
  standard_name = model_layer_number_at_cloud_base
  long_name = vertical indices for low, middle and high cloud bases
  units = index
  dimensions = (horizontal_loop_extent,3)
  type = integer
  intent = inout
[imp_physics]
  standard_name = control_for_microphysics_scheme
  long_name = choice of microphysics scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[imp_physics_gfdl]
  standard_name = identifier_for_gfdl_microphysics_scheme
  long_name = choice of GFDL microphysics scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[imp_physics_fa]
  standard_name = identifier_for_fer_hires_microphysics_scheme
  long_name = choice of Ferrier-Aligo microphysics scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[iovr]
  standard_name = flag_for_cloud_overlap_method_for_radiation
  long_name = max-random overlap clouds
  units = flag
  dimensions = ()
  type = integer
  intent = in
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
[errflg]
  standard_name = ccpp_error_code
  long_name = error code for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out
